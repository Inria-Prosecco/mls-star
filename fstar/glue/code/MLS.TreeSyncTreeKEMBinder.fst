module MLS.TreeSyncTreeKEMBinder

open Comparse
open MLS.Crypto
open MLS.TreeSync.NetworkTypes
open MLS.TreeKEM.NetworkTypes
open MLS.Tree
open MLS.TreeSync.Types
open MLS.TreeKEM.Types
open MLS.Result

#set-options "--fuel 1 --ifuel 1"

val nat_lbytes_to_nat: #sz:nat -> nat_lbytes sz -> nat
let nat_lbytes_to_nat #sz x = x

val treesync_to_treekem_node:
  #bytes:Type0 -> {|crypto_bytes bytes|} ->
  parent_node_nt bytes tkt ->
  treekem_node bytes
let treesync_to_treekem_node #bytes #cb node =
  {
    public_key = node.content;
    unmerged_leaves = List.Tot.map nat_lbytes_to_nat node.unmerged_leaves;
  }

// This does not contain any internal TreeKEM data. To be used then joining a new group.
val treesync_to_treekem:
  #bytes:Type0 -> {|crypto_bytes bytes|} ->
  #l:nat -> #i:tree_index l ->
  treesync bytes tkt l i ->
  treekem bytes l i
let rec treesync_to_treekem #bytes #cb #l #i t =
  match t with
  | TLeaf None ->
    TLeaf None
  | TLeaf (Some lp) ->
    TLeaf (Some ({public_key = lp.data.content} <: treekem_leaf bytes))
  | TNode onp left right -> (
    let tk_left = treesync_to_treekem left in
    let tk_right = treesync_to_treekem right in
    match onp with
    | None ->
      TNode None tk_left tk_right
    | Some np ->
      TNode (Some (treesync_to_treekem_node np)) tk_left tk_right
  )

//This function is used to authenticate data generated by TreeKEM. It allows TreeSync to handle parent hash + signature.
val treekem_to_treesync:
  #bytes:Type0 -> {|crypto_bytes bytes|} ->
  #l:nat -> #i:tree_index l -> #li:leaf_index l i ->
  leaf_node_data_nt bytes tkt -> pre_pathkem bytes l i li ->
  result (external_pathsync bytes tkt l i li)
let rec treekem_to_treesync #bytes #cb #l #i #li new_leaf_package pk =
  match pk with
  | PLeaf mi ->
    let? content = mk_mls_bytes mi.public_key "treekem_to_treesync" "content" in
    return (PLeaf ({
      new_leaf_package with
      content;
    } <: leaf_node_data_nt bytes tkt))
  | PNode okp pk_next ->
    let? next = treekem_to_treesync new_leaf_package pk_next in
    return (PNode okp next)
